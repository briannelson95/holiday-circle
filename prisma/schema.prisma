generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  name           String?
  password       String?
  emailVerified  DateTime?
  image          String?
  accounts       Account[]      // Required for NextAuth
  sessions       Session[]      // Required for NextAuth
  participants   Participant[]  
  exchanges      GiftExchange[] 

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?   @db.Text
  session_state      String?
  user               User      @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique
  userId       Int
  expires      DateTime
  user         User      @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id         Int       @id @default(autoincrement())
  identifier String
  token      String    @unique
  expires    DateTime
}


model GiftExchange {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  date         DateTime
  ownerId      Int
  owner        User          @relation(fields: [ownerId], references: [id]) // User who created this exchange
  participants Participant[] // Participants of the gift exchange

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Participant {
  id             Int          @id @default(autoincrement())
  userId         Int
  user           User         @relation(fields: [userId], references: [id]) // Link to User
  giftExchangeId Int
  giftExchange   GiftExchange @relation(fields: [giftExchangeId], references: [id]) // Link to GiftExchange
  gift           String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
